// –ü–æ–ª—É—á–µ–Ω–∏–µ ID —Ç–æ–≤–∞—Ä–∞ –∏–∑ URL (–Ω–∞–ø—Ä–∏–º–µ—Ä: ?id=123)
function getProductIdFromUrl() {
    const params = new URLSearchParams(window.location.search);
    return params.get('id');
  }
  
  // –ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–µ
  async function loadProduct() {
    const productId = getProductIdFromUrl();
    if (!productId) return;
  
    try {
      const response = await fetch(`/api/products/${productId}`);
      const product = await response.json();
  
      // –ü—Ä–∏–≤—è–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
      document.getElementById("product-image").src = product.image || 'https://via.placeholder.com/150';
      document.getElementById('product-title').textContent = product.name;
      document.getElementById('product-description').textContent = product.description || "–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–æ"; // –í—ã–≤–æ–¥–∏–º –æ–ø–∏—Å–∞–Ω–∏–µ
      document.getElementById('product-properties').textContent = `–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: ${product.properties}`;
      document.getElementById('product-price').textContent = `${product.price} ‚ÇΩ`;
  
      saveToRecentlyViewed(product);
      loadRecentlyViewed(product._id);
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–∞:', err);
    }
  }
  
  
  
  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É
  function addToCart() {
    const productId = getProductIdFromUrl();
    if (!productId) return;
  
    let cart = JSON.parse(localStorage.getItem('cart')) || [];
    cart.push(productId);
    localStorage.setItem('cart', JSON.stringify(cart));
    alert('üõí –¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!');
  }
  
  // –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç–∑—ã–≤–æ–≤
  async function loadReviews() {
    const productId = getProductIdFromUrl();
    if (!productId) return;
  
    try {
      const response = await fetch(`/api/reviews/${productId}`);
      const reviews = await response.json();
  
      const reviewsList = document.getElementById('reviews-list');
      reviewsList.innerHTML = '';
  
      reviews.forEach(review => {
        const div = document.createElement('div');
        div.className = 'review';
        div.innerHTML = `<strong>${'‚òÖ'.repeat(review.rating)}${'‚òÜ'.repeat(5 - review.rating)}</strong><br>${review.text}`;
        reviewsList.appendChild(div);
      });
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–∑—ã–≤–æ–≤:', err);
    }
  }
  
  // –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–∑—ã–≤–∞
  async function submitReview(event) {
    event.preventDefault();
  
    const productId = getProductIdFromUrl();
    const rating = parseInt(document.getElementById('rating').value);
    const text = document.getElementById('review-text').value;
  
    if (!text) return alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –æ—Ç–∑—ã–≤.');
  
    try {
      await fetch('/api/reviews', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ productId, rating, text })
      });
  
      document.getElementById('review-form').reset();
      loadReviews();
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–∑—ã–≤–∞:', err);
    }
  }
  
  document.getElementById('review-form').addEventListener('submit', submitReview);
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–≤–∞—Ä –≤ localStorage
  function saveToRecentlyViewed(product) {
    let viewed = JSON.parse(localStorage.getItem('recentlyViewed')) || [];
    viewed = viewed.filter(p => p._id !== product._id); // —É–¥–∞–ª–∏–º –¥—É–±–ª–∏–∫–∞—Ç—ã
    viewed.unshift(product); // –¥–æ–±–∞–≤–∏–º –≤ –Ω–∞—á–∞–ª–æ
    if (viewed.length > 10) viewed = viewed.slice(0, 10); // –º–∞–∫—Å–∏–º—É–º 10 —Ç–æ–≤–∞—Ä–æ–≤
    localStorage.setItem('recentlyViewed', JSON.stringify(viewed));
  }
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –Ω–µ–¥–∞–≤–Ω–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
  function loadRecentlyViewed(currentId) {
    
    const viewed = JSON.parse(localStorage.getItem('recentlyViewed')) || [];
    const container = document.getElementById('recently-viewed-list');
    container.innerHTML = '';
  
    viewed
      .filter(p => p._id !== currentId)
      .forEach(product => {
        const div = document.createElement('div');
        div.className = 'recent-item';
        div.innerHTML = `
          <img src="${product.image}" alt="${product.name}">
          <h4>${product.name}</h4>
          <p>${product.price} ‚ÇΩ</p>
        `;
        div.onclick = () => {
          window.location.href = `product.html?id=${product._id}`;
        };
        container.appendChild(div);
      });
  }
  
  // –ó–∞–ø—É—Å–∫
  loadProduct();
  loadReviews();
  